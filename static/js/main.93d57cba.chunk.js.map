{"version":3,"sources":["components/Header.jsx","components/PlanetCard.jsx","components/Title.jsx","data/planets.js","images/Mercurio.png","images/Venus.png","images/Terra.png","images/Marte.png","images/Jupiter.png","images/Saturno.png","images/Urano.png","images/Netuno.png","components/SolarSystem.jsx","components/MissionCard.jsx","data/missions.js","components/Missions.jsx","App.js","index.js"],"names":["Header","className","Component","PlanetCard","this","props","planetName","planetImage","src","alt","Title","headline","console","log","Planets","name","image","SolarSistem","naTela","map","renderizar","MissionCard","year","country","destination","USA","URSS","Missions","impossivel","MissionsData","nameMission","App","React","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.93d57cba.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Header extends Component {\n  render() {\n    return (\n      <header className=\"title\">\n        <h1>Sistema Solar</h1>\n      </header>\n    );\n  }\n}\nexport default Header;\n","import React, { Component } from 'react';\nimport PropsTypes from 'prop-types';\n\nclass PlanetCard extends Component {\n  render() {\n    const { planetName, planetImage } = this.props;\n    return (\n      <li data-testid=\"planet-card\">\n        <h5 data-testid=\"planet-name\">{planetName}</h5>\n        <img src={ planetImage } alt={ `Planeta ${planetName}` } />\n      </li>\n    );\n  }\n}\n\nPlanetCard.propTypes = {\n  planetName: PropsTypes.string.isRequired,\n  planetImage: PropsTypes.string.isRequired,\n};\n\nexport default PlanetCard;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Title extends Component {\n  render() {\n    const { headline } = this.props;\n    console.log(headline);\n    return <h2>{ headline }</h2>;\n  }\n}\n\nexport default Title;\n\nTitle.propTypes = {\n  headline: PropTypes.string.isRequired,\n};\n","import MercurioImg from '../images/Mercurio.png';\nimport VenusImg from '../images/Venus.png';\nimport TerraImg from '../images/Terra.png';\nimport MarteImg from '../images/Marte.png';\nimport JupiterImg from '../images/Jupiter.png';\nimport SaturnoImg from '../images/Saturno.png';\nimport Uranoimg from '../images/Urano.png';\nimport Netunoimg from '../images/Netuno.png';\n\nconst Planets = [\n  { name: 'Mercúrio', image: MercurioImg },\n  { name: 'Vênus', image: VenusImg },\n  { name: 'Terra', image: TerraImg },\n  { name: 'Marte', image: MarteImg },\n  { name: 'Júpiter', image: JupiterImg },\n  { name: 'Saturno', image: SaturnoImg },\n  { name: 'Urano', image: Uranoimg },\n  { name: 'Netuno', image: Netunoimg },\n];\n\nexport default Planets;\n","export default __webpack_public_path__ + \"static/media/Mercurio.a7105a56.png\";","export default __webpack_public_path__ + \"static/media/Venus.397fdee2.png\";","export default __webpack_public_path__ + \"static/media/Terra.990ac782.png\";","export default __webpack_public_path__ + \"static/media/Marte.6cae79d3.png\";","export default __webpack_public_path__ + \"static/media/Jupiter.529cdbe0.png\";","export default __webpack_public_path__ + \"static/media/Saturno.00b7295f.png\";","export default __webpack_public_path__ + \"static/media/Urano.607cb33c.png\";","export default __webpack_public_path__ + \"static/media/Netuno.48cf14b7.png\";","import React, { Component } from 'react';\nimport PlanetCard from './PlanetCard';\nimport Title from './Title';\nimport Planets from '../data/planets';\n\nclass SolarSistem extends Component {\n  render() {\n    const naTela = Planets.map((renderizar) => (<PlanetCard\n      planetName={ renderizar.name }\n      planetImage={ renderizar.image }\n      key={ renderizar.name }\n    />));\n    return (\n      <section className=\"containers\">\n        <div className=\"center\">\n          <div className=\"stylePlanetas\" data-testid=\"solar-system\">\n            <Title headline=\"Planetas\" />\n          </div>\n        </div>\n        <ul className=\"hover-card\">{naTela}</ul>\n      </section>\n    );\n  }\n}\n\nexport default SolarSistem;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass MissionCard extends Component {\n  render() {\n    const { name, year, country, destination } = this.props;\n    return (\n      <li data-testid=\"mission-card\">\n        <h3 data-testid=\"mission-name\">{name}</h3>\n        <p data-testid=\"mission-year\">{year}</p>\n        <p data-testid=\"mission-country\">{country}</p>\n        <p data-testid=\"mission-destination\">{destination}</p>\n      </li>\n    );\n  }\n}\n\nMissionCard.propTypes = {\n  name: PropTypes.string.isRequired,\n  year: PropTypes.number.isRequired,\n  country: PropTypes.string.isRequired,\n  destination: PropTypes.string.isRequired,\n};\n\nexport default MissionCard;\n","const USA = 'Estados Unidos';\nconst URSS = 'URSS';\n\nconst Missions = [\n  {\n    name: 'Apollo 11',\n    year: '1960',\n    country: USA,\n    destination: 'Lua',\n  },\n  {\n    name: 'Voyager 1',\n    year: '1977',\n    country: USA,\n    destination: 'Espaço interestelar',\n  },\n  {\n    name: 'Mars Pathfinder',\n    year: '1996',\n    country: USA,\n    destination: 'Marte',\n  },\n  {\n    name: 'Estação Internacional Espacial',\n    year: '1998',\n    country: 'Estados Unidos e Rússia',\n    destination: 'Órbita terrestre',\n  },\n  {\n    name: 'Kepler',\n    year: '2009',\n    country: USA,\n    destination: 'Espaço interestelar',\n  },\n  {\n    name: 'Cassini-Huygens',\n    year: '2009',\n    country: 'Estados Unidos e União Europeia',\n    destination: 'Saturno',\n  },\n  {\n    name: 'Mariner 2',\n    year: '1962',\n    country: USA,\n    destination: 'Vênus',\n  },\n  {\n    name: 'Venera 4',\n    year: '1967',\n    country: URSS,\n    destination: 'Vênus',\n  },\n  {\n    name: 'Mariner 5',\n    year: '1967',\n    country: USA,\n    destination: 'Vênus',\n  },\n  {\n    name: 'Mariner 10',\n    year: '1975',\n    country: USA,\n    destination: 'Vênus',\n  },\n  {\n    name: 'Venera 16',\n    year: '1983',\n    country: URSS,\n    destination: 'Vênus',\n  },\n  {\n    name: 'MESSENGER',\n    year: '2004',\n    country: USA,\n    destination: 'Mercúrio',\n  },\n  {\n    name: 'Genesis',\n    year: '2001',\n    country: USA,\n    destination: 'Terra',\n  },\n  {\n    name: '2001 Mars Odyssey',\n    year: '2001',\n    country: USA,\n    destination: 'Marte',\n  },\n  {\n    name: 'Mars Surveyor 98 Lander',\n    year: '1999',\n    country: USA,\n    destination: 'Marte',\n  },\n  {\n    name: 'Nozomi (Planeta B)',\n    year: '1998',\n    country: 'Japão',\n    destination: 'Marte',\n  },\n  {\n    name: 'Fobos 1',\n    year: '1988',\n    country: URSS,\n    destination: 'Marte',\n  },\n  {\n    name: 'Fobos 2',\n    year: '1988',\n    country: URSS,\n    destination: 'Marte',\n  },\n  {\n    name: 'Galileo',\n    year: '1989',\n    country: USA,\n    destination: 'Júpiter',\n  },\n  {\n    name: 'Cassini/Huygens',\n    year: '1997',\n    country: 'Estados Unidos e Europa',\n    destination: 'Saturno',\n  },\n];\n\nexport default Missions;\n","import React, { Component } from 'react';\nimport Title from './Title';\nimport MissionCard from './MissionCard';\nimport MissionsData from '../data/missions';\n\nclass Missions extends Component {\n  render() {\n    const impossivel = MissionsData.map((nameMission) => (\n      <MissionCard\n        key={ nameMission.name }\n        name={ nameMission.name }\n        year={ nameMission.year }\n        country={ nameMission.country }\n        destination={ nameMission.destination }\n      />\n    ));\n    return (\n      <section className=\"center\">\n        <div className=\"stylePlanetas\" data-testid=\"missions\">\n          <Title headline=\"Missões\" />\n        </div>\n        <ul>{impossivel}</ul>\n\n      </section>\n    );\n  }\n}\n\nexport default Missions;\n","import React from 'react';\nimport Header from './components/Header';\nimport SolarSistem from './components/SolarSystem';\nimport './App.css';\nimport Missions from './components/Missions';\n\nclass App extends React.Component {\n  // pelo amor de Deus namoral erro de ccs por causa de poscionamento que test...\n  render() {\n    return (\n      <>\n        <Header />\n        <SolarSistem />\n        <Missions />\n      </>);\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n"],"sourceRoot":""}